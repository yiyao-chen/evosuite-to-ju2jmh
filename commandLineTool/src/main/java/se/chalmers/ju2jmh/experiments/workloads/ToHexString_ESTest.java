/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 05 15:01:04 GMT 2023
 */
package se.chalmers.ju2jmh.experiments.workloads;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.chalmers.ju2jmh.experiments.workloads.ToHexString;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ToHexString_ESTest extends ToHexString_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        String string0 = ToHexString.runWorkload(61.707995);
        assertEquals("0x1.eda9f94855da2p5", string0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        ToHexString toHexString0 = new ToHexString();
        assertEquals((-1.2345E-66), ToHexString.INPUT, 0.01);
    }

    @org.openjdk.jmh.annotations.State(org.openjdk.jmh.annotations.Scope.Thread)
    public static class _Benchmark extends se.chalmers.ju2jmh.experiments.workloads.ToHexString_ESTest_scaffolding._Benchmark {

        @org.openjdk.jmh.annotations.Benchmark
        public void benchmark_test0() throws java.lang.Throwable {
            this.createImplementation();
            this.runBenchmark(this.implementation()::test0, this.description("test0"));
        }

        @org.openjdk.jmh.annotations.Benchmark
        public void benchmark_test1() throws java.lang.Throwable {
            this.createImplementation();
            this.runBenchmark(this.implementation()::test1, this.description("test1"));
        }

        private ToHexString_ESTest implementation;

        @java.lang.Override
        public void createImplementation() throws java.lang.Throwable {
            this.implementation = new ToHexString_ESTest();
        }

        @java.lang.Override
        public ToHexString_ESTest implementation() {
            return this.implementation;
        }
    }
}
